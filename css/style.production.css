/* CSS variable declaration  :root (psuedo class) to target all the elements within the <HTML> */

body {
  /* Var() function to use the CSS variable declared under the pseudo class :root */
  background-color: #b0d0b0;
  font-family: "Kalam", cursive;
  font-weight: 400;
  font-size: 20px;
  line-height: 1;
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

a {
  color: #000;
}

/* div {
padding: var(--padding-10px); /* Adds a 10px inner spacing to all sides */
/* margin: 10px; /* Adds a 10px outer spacing to all sides */
/* border: 1px solid black; /* Attributes describe: thickness, type, color */
/* } */
.navigation-list {
  /* removes the dots (bullet) for the lists */
  list-style-type: none;
  /* takes the font from the outer container */
  font-family: inherit;
  background-color: inherit;
  transition-duration: 0.5s;
  transition-property: opacity;
  /* by default it is 'ease' if this property not specified */
  transition-timing-function: ease-in;
}

.navigation-list li {
  display: inline-block;
  margin-left: 10px;
}

/* li {
display: inline;
} */
a:visited {
  color: #800040;
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  color: #265340;
}

button {
  /* overwrites the browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline,etc.) of the button */
  background-color: black;
  color: white !important;
  text-decoration: none;
  /* add spacing to the button */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a botton border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.5s;
  transition-property: opacity;
  /* by default it is 'ease' if this property not specified */
  transition-timing-function: linear;
  /* by default it is '0s' if this property not specified */
  /* transition-delay: 1s; */
}

.button {
  /* overwrites the browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline,etc.) of the button */
  background-color: black;
  color: white !important;
  text-decoration: none;
  /* add spacing to the button */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a botton border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.5s;
  transition-property: opacity;
  /* by default it is 'ease' if this property not specified */
  transition-timing-function: linear;
  /* by default it is '0s' if this property not specified */
  /* transition-delay: 1s; */
}

.send-button {
  /* overwrites the browser defaults and resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline,etc.) of the button */
  background-color: black;
  color: white !important;
  text-decoration: none;
  /* add spacing to the button */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a botton border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.5s;
  transition-property: opacity;
  /* by default it is 'ease' if this property not specified */
  transition-timing-function: linear;
  /* by default it is '0s' if this property not specified */
  /* transition-delay: 1s; */
}

button:hover,
button:focus,
.button:hover,
.button:focus,
.send-button:hover,
.send-button:focus {
  /* let the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.6;
}

/* .button__secondary - (dot) signifies user defined class to apply styling for specific element */
/* .button__secondary {
background-color: #bda185;
color: #2b2b2b;
} */
/* one more user defined class in BEM (Block Element Modifier) format */
.navigation-list__item--active {
  text-decoration: none;
}

.font__weight {
  font-weight: bold;
}

* {
  box-sizing: border-box;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
  /*  border-bottom: 1px solid black; */
  /* background-color: #265340; */
}

.page-header__item {
  flex: 0 1 125px;
  height: 100%;
  padding: 10px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.portfolio__portrait {
  float: left;
  /* image will be placed on left side with regard to the child item */
  width: 400px;
  max-width: 100%;
  margin-right: 40px;
  border-radius: 50%;
  /* for rounded image */
}

.page-footer {
  clear: both;
  /* it clears all floats, both right & left */
  display: flex;
  /* to change the layout of the social-media icons */
  flex-direction: column;
  /* to position the elements in the flex container in column wise */
  text-align: center;
  /* this would align the images as well */
}

.profile {
  max-width: 700px;
  margin: 0 auto;
  /* to center  the profile container */
}

.about__body {
  max-width: 700px;
  margin: 0 auto;
  /* to center  the profile container */
  text-align: center;
}

.berlin-illustration {
  max-width: 100%;
}

.skillset {
  list-style-type: none;
  /* to remove the bullets from the list */
}

/* .contact__body { */
.contact__grid {
  display: grid;
  padding: 20px;
  grid-template-columns: 1fr 1fr;
  max-width: 700px;
  grid-gap: 25px;
  margin: 0 auto;
  /* to center  the profile container */
}

.section__grid {
  padding: 20px;
}

.grid {
  display: grid;
  /* fr - fraction - new unit for grid - using this would make the columns arrange themselves without hiding any content when we resize the broswer */
  grid-template-columns: 1fr 1fr;
  grid-gap: 20px;
  /* grid-template-columns: 300px 300px 300px; */
  /* grid-template-rows: 300px 300px; */
}

.contact__grid-item {
  line-height: 1.5;
}

.grid__item {
  background-color: #bdb6af;
  padding: 10px;
  border-radius: 5%;
}

.contact__grid-form {
  background-color: #bdb6af;
  padding: 10px;
  border-radius: 5%;
}

.grid__image {
  max-width: 400px;
  max-height: 400px;
}

.contact__grid-form {
  background-color: #d0d0b0;
  padding: 10px;
  border-radius: 5%;
}

.keyin-box {
  background-color: #b0d0b0;
}

.error-message {
  color: navy;
  font-weight: bold;
  font-style: italic;
  font-size: 16px;
}

@media all and (max-width: 500px) {
  .portfolio__portrait {
    /* float: left; /* image will be placed on left side with regard to the child item */
    width: 400px;
    max-width: 100%;
    margin-right: 40px;
    border-radius: 50%;
    /* for rounded image */
  }

  .grid,
.contact__grid {
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px) {
  .grid,
.contact__grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  .grid,
.contact__grid {
    grid-gap: 10px;
  }

  .grid__item,
.contact__grid-item,
.contact__grid-form {
    grid-column: auto/auto;
    grid-row: auto/auto;
  }

  h1 {
    font-size: 24px;
  }
}
@keyframes logo-trans {
  from {
    transform: scale(0.8, 0.8);
  }
  to {
    transform: scale(1, 1);
  }
}
.page-header__item--trans {
  animation: 0.7s logo-trans infinite alternate linear;
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}
/* .sun {
animation-duration: 4s;
animation-name: color-change;
animation-iteration-count: infinite;
animation-direction: alternate;
animation-timing-function: linear;
} */
.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  /* to move the bigger cloud from left to right */
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}
.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
  /* to move the smaller cloud from left to right */
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}
.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}